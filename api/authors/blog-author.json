{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"封装canvas画分享图能力","uid":"5ec98a85a99b57e340a9a2a9ff61c2c1","slug":"canvas-screenshot","date":"2024-08-29T12:52:43.149Z","updated":"2024-08-29T12:53:27.162Z","comments":true,"path":"api/articles/canvas-screenshot.json","keywords":null,"cover":"/images/cover1.jpg","text":"整理了一下工作中封装的画分享海报的能力 class ShareCanvas { constructor(config) { this.width = confi...","permalink":"/post/canvas-screenshot","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"canvas","slug":"canvas","count":1,"path":"api/categories/canvas.json"}],"tags":[{"name":"canvas","slug":"canvas","count":1,"path":"api/tags/canvas.json"}],"author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"逐帧动画实现无限轮播","uid":"92e648db1789cade1fa84cef6b1bbfe8","slug":"animation-steps","date":"2024-08-11T07:44:20.576Z","updated":"2024-08-11T08:23:24.669Z","comments":true,"path":"api/articles/animation-steps.json","keywords":null,"cover":"/images/cover1.jpg","text":"最近有一个无限滚动轮播的需求，最开始用js+延时器写了一版，但因为是用在首页性能消耗很大，所以想试试能不能用css搞定，嘿，还真发现了一种方法，虽然最后没有使用...","permalink":"/post/animation-steps","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"css","slug":"css","count":2,"path":"api/categories/css.json"},{"name":"animation","slug":"css/animation","count":2,"path":"api/categories/css/animation.json"}],"tags":[{"name":"animation","slug":"animation","count":1,"path":"api/tags/animation.json"}],"author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"滚动驱动动画animation-timeline","uid":"1fe4dcdfe1c34a2e89ece05477f6b2fb","slug":"animation-timeline","date":"2024-08-04T08:17:26.873Z","updated":"2024-08-10T10:14:49.869Z","comments":true,"path":"api/articles/animation-timeline.json","keywords":null,"cover":"/images/cover1.jpg","text":"CSS滚动驱动动画animation-timeline终于正式支持了，一些炫酷的动画终于可以用简单的写法支持啦，快来看看吧~一、快速入门 CSS 滚动驱动动画下...","permalink":"/post/animation-timeline","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"css","slug":"css","count":2,"path":"api/categories/css.json"},{"name":"animation","slug":"css/animation","count":2,"path":"api/categories/css/animation.json"}],"tags":[{"name":"css","slug":"css","count":1,"path":"api/tags/css.json"}],"author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"多行文本展开收起的实现方式","uid":"53e70211b9fa8a0658b9a8cefd096926","slug":"full-text","date":"2024-08-29T12:52:38.496Z","updated":"2024-08-29T12:53:19.195Z","comments":true,"path":"api/articles/full-text.json","keywords":null,"cover":"/images/cover1.jpg","text":"多行文本超过指定行数，进行文本截断并显示省略号，并通过展开和收起来控制是否显示全部内容，调研很多种方式，目前这个是最合适的且最终的实现方案。 具体代码 <tem...","permalink":"/post/full-text","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"html&css","slug":"html-css","count":3,"path":"api/categories/html-css.json"}],"tags":[{"name":"html&css","slug":"html-css","count":3,"path":"api/tags/html-css.json"}],"author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"git 常用命令","uid":"62bc8025e0eb197d420ffa98bc79c161","slug":"git","date":"2024-08-17T07:36:39.589Z","updated":"2024-08-17T07:53:52.733Z","comments":true,"path":"api/articles/git.json","keywords":null,"cover":"/images/cover1.jpg","text":"目前常用的git命令整理 1，git init 初始化一个新的Git仓库。 这将在当前目录中创建一个名为”.git”的子目录，Git会将所有仓库的元数据存储在其...","permalink":"/post/git","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"git","slug":"git","count":1,"path":"api/categories/git.json"}],"tags":[{"name":"git","slug":"git","count":1,"path":"api/tags/git.json"}],"author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Intersection Observer 交叉观察","uid":"13f6ca6756a4b641116bd6f0d8205d5e","slug":"intersection-observer","date":"2024-08-17T06:36:30.142Z","updated":"2024-08-17T07:32:25.263Z","comments":true,"path":"api/articles/intersection-observer.json","keywords":null,"cover":"/images/cover1.jpg","text":"IntersectionObserver API 是现代浏览器提供的一种异步观察目标元素与祖先元素（或顶级文档视窗）交叉状态的方法。它可以用于实现懒加载图片、无...","permalink":"/post/intersection-observer","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"javascript","slug":"javascript","count":1,"path":"api/categories/javascript.json"}],"tags":[{"name":"javascript","slug":"javascript","count":1,"path":"api/tags/javascript.json"}],"author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"微信头像九宫格布局","uid":"02dffd67a1266aabc62643a303624bae","slug":"微信头像九宫格布局","date":"2024-08-04T08:19:28.411Z","updated":"2024-08-10T10:13:05.902Z","comments":true,"path":"api/articles/微信头像九宫格布局.json","keywords":null,"cover":"/images/cover1.jpg","text":"近期写页面遇到需要九宫格布局的情况，研究许久现记录一下布局方式。 我们知道 flex 布局可以设置flex-wrap: wrap在元素放不下后自动换行，那么设置...","permalink":"/post/微信头像九宫格布局","photos":[],"count_time":{"symbolsCount":197,"symbolsTime":"1 mins."},"categories":[{"name":"html&css","slug":"html-css","count":3,"path":"api/categories/html-css.json"}],"tags":[{"name":"html&css","slug":"html-css","count":3,"path":"api/tags/html-css.json"}],"author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"屏幕适配方案","uid":"758086e3bca7c26b0f11ceb6e2c6e587","slug":"屏幕适配方案","date":"2024-08-04T08:19:02.993Z","updated":"2024-08-10T10:15:31.368Z","comments":true,"path":"api/articles/屏幕适配方案.json","keywords":null,"cover":"/images/cover1.jpg","text":"1.使用 @media搭配 rem 单位rem是相对于根html元素的字体大小的单位 html { font-size: 16px;}span { font-s...","permalink":"/post/屏幕适配方案","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"html&css","slug":"html-css","count":3,"path":"api/categories/html-css.json"}],"tags":[{"name":"html&css","slug":"html-css","count":3,"path":"api/tags/html-css.json"}],"author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}],"categories":6,"tags":8,"word_count":"29k","post_count":8}