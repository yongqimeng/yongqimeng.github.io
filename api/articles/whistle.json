{"title":"whistle抓包代理工具","uid":"eeb7b514e12d61eac9385751fe5aa156","slug":"whistle","date":"2022-08-20T09:51:38.000Z","updated":"2024-10-09T13:00:33.764Z","comments":true,"path":"api/articles/whistle.json","keywords":null,"cover":"/images/cover1.jpg","content":"<p>提起抓包工具，或许大家首先想到的是 Fiddler(Win) 和 Charles(Mac),这也是各自平台下优秀的抓包工具。然而，今天想推荐一款跟 平台无关的，不止于抓包的(还能调试)开发工具：Whistle。</p>\n<p>Whistle 是基于 Node 实现的跨平台web调试代理工具，可以用于查看、修改 HTTP、HTTPS、Websocket 的请求、响应，也可以作为 HTTP 代理服务器使用，不同于 Fiddler 通过断点修改请求响应的方式，Whistle 采用的是类似配置系统 hosts 的方式，一切操作都可以通过配置实现，支持域名、路径、正则表达式、通配符、通配路径等多种匹配方式，且可以通过 Node 模块扩展功能</p>\n<p>官网操作已经很详细了，就不赘述了。</p>\n<p><a href=\"https://wproxy.org/whistle/\">whistle官网</a>;</p>\n","text":"提起抓包工具，或许大家首先想到的是 Fiddler(Win) 和 Charles(Mac),这也是各自平台下优秀的抓包工具。然而，今天想推荐一款跟 平台无关的，...","permalink":"/post/whistle","photos":[],"count_time":{"symbolsCount":342,"symbolsTime":"1 mins."},"categories":[{"name":"tools","slug":"tools","count":2,"path":"api/categories/tools.json"}],"tags":[{"name":"tools","slug":"tools","count":4,"path":"api/tags/tools.json"}],"toc":"","author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"CSS百分比padding与宽度自适应图片布局","uid":"091a7e6c8b5ddb60fed53390d06e3bce","slug":"image-padding","date":"2022-09-11T05:18:21.000Z","updated":"2024-10-09T13:13:47.402Z","comments":true,"path":"api/articles/image-padding.json","keywords":null,"cover":"/images/cover1.jpg","text":"CSS百分比padding实现比例固定图片自适应布局。通过给盒子加resize属性模拟不同的屏幕宽度通过下面这个例子可以看到，无论屏幕宽度多宽，我们的图片比例都...","permalink":"/post/image-padding","photos":[],"count_time":{"symbolsCount":463,"symbolsTime":"1 mins."},"categories":[{"name":"html&css","slug":"html-css","count":12,"path":"api/categories/html-css.json"}],"tags":[{"name":"css","slug":"css","count":9,"path":"api/tags/css.json"}],"author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"0.5px边框的各方法对比总结","uid":"41046c2c30390c7bbce15460a949ca7f","slug":"0.5border","date":"2022-08-06T06:21:59.000Z","updated":"2024-10-09T13:12:19.006Z","comments":true,"path":"api/articles/0.5border.json","keywords":null,"cover":"/images/cover1.jpg","text":"做移动端开发的时候，如果边框直接设置 1px 的宽度，可能视觉上还是太粗无法满足设计师的要求。下面是我实现 0.5px 边框的几种方案。 <div class=...","permalink":"/post/0.5border","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"html&css","slug":"html-css","count":12,"path":"api/categories/html-css.json"}],"tags":[{"name":"css","slug":"css","count":9,"path":"api/tags/css.json"}],"author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}