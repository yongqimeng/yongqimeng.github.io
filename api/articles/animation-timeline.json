{"title":"滚动驱动动画animation-timeline","uid":"1fe4dcdfe1c34a2e89ece05477f6b2fb","slug":"animation-timeline","date":"2024-08-04T08:17:26.873Z","updated":"2024-08-10T10:14:49.869Z","comments":true,"path":"api/articles/animation-timeline.json","keywords":null,"cover":"/images/cover1.jpg","content":"<h2 id=\"CSS滚动驱动动画animation-timeline终于正式支持了，一些炫酷的动画终于可以用简单的写法支持啦，快来看看吧\"><a href=\"#CSS滚动驱动动画animation-timeline终于正式支持了，一些炫酷的动画终于可以用简单的写法支持啦，快来看看吧\" class=\"headerlink\" title=\"CSS滚动驱动动画animation-timeline终于正式支持了，一些炫酷的动画终于可以用简单的写法支持啦，快来看看吧~\"></a>CSS滚动驱动动画animation-timeline终于正式支持了，一些炫酷的动画终于可以用简单的写法支持啦，快来看看吧~</h2><h3 id=\"一、快速入门-CSS-滚动驱动动画\"><a href=\"#一、快速入门-CSS-滚动驱动动画\" class=\"headerlink\" title=\"一、快速入门 CSS 滚动驱动动画\"></a>一、快速入门 CSS 滚动驱动动画</h3><p>下面是一个页面进度指示器，进度随着页面的滚动而变化</p>\n<p><img src=\"/images/timeline1.gif\" alt=\"timeline1\"></p>\n<p>首先代码很简单，先是一个容器</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>这<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>里<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>是<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>测<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>试<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>文<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>字<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>然后是css和动画，并且加上我们今天的核心主角<code>animation-timeline</code></p>\n<p>这样进度条就乖乖的跟随页面滚动而变化了（注意Chrome 115+）</p>\n<p><strong>动画时长不能为0，因为为0表示动画不执行，所以必须写上一个任意非零时间，或者直接为auto!!!</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">  <span class=\"attribute\">transform-origin</span>: <span class=\"number\">0</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation</span>: grow-progress <span class=\"number\">1s</span> linear;</span><br><span class=\"line\">  <span class=\"attribute\">animation</span>-timeline: <span class=\"built_in\">scroll</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#6467F0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#FFFFFF</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> grow-progress &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">from</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">scaleX</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">to</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">scaleX</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>是不是非常神奇?</p>\n<h3 id=\"二、CSS-滚动驱动动画\"><a href=\"#二、CSS-滚动驱动动画\" class=\"headerlink\" title=\"二、CSS 滚动驱动动画\"></a>二、CSS 滚动驱动动画</h3><ul>\n<li><p>大家可能知道，传统 JS 监听滚动有一些问题，如下</p>\n<ul>\n<li><p>现代浏览器在单独的进程上执行滚动，因此只能异步传递滚动事件。</p>\n</li>\n<li><p>由于是异步传递，因此主线程动画容易出现卡顿</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>因此，为了解决滚动卡顿的问题，CSS 滚动驱动动画应运而生。那么，什么是 CSS 滚动驱动动画？</p>\n<p>默认情况下，动画是「随着时间的流逝」而播放的。</p>\n<p><code>CSS 滚动驱动动画</code>指的是将<code>动画的执行过程由页面滚动</code>进行接管，也就是这种情况下，<code>动画只会跟随页面滚动的变化而变化</code>，也就是滚动多少，动画就执行多少，<code>时间不再起作用</code>。</p>\n<p>如何改变动画的时间线呢？那就需要用到这个核心概念了：animation-timeline，表示<code>动画时间线</code>（或者叫时间轴），用于控制 CSS 动画进度的时间线，是必不可少的一个属性。</p>\n<p>默认值是auto，也是就传统的时间线。下面是它一些关键词</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 关键词 */</span></span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: none;</span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: auto;</span><br><span class=\"line\"><span class=\"comment\">/* 命名时间线 */</span></span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: --timeline_name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 滚动时间线 */</span></span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: <span class=\"built_in\">scroll</span>();</span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: <span class=\"built_in\">scroll</span>(scroller axis);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 视图时间线 */</span></span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: <span class=\"built_in\">view</span>();</span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: <span class=\"built_in\">view</span>(axis inset);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>是不是有点混乱？不要慌，实际滚动场景千千万，这里可以分为两大类：一类是<code>滚动进度时间线</code>，也就是上面的关键词<code>scroll()</code>，还有一类是<code>视图进度时间线</code>，也就是关键词view()。</p>\n<h3 id=\"三-CSS-滚动进度时间线\"><a href=\"#三-CSS-滚动进度时间线\" class=\"headerlink\" title=\"三. CSS 滚动进度时间线\"></a>三. CSS 滚动进度时间线</h3><p><code>滚动进度时间线（scroll progress timeline）</code>。表示页面或者容器滚动，<code>将滚动进度映射到动画进度上</code>。</p>\n<p>这里的scroll()是一个简写，可以传递两个参数，分别是<scroller>和<axis></p>\n<ul>\n<li><p><scroller>表示滚动容器，支持以下几个关键值</p>\n<ul>\n<li><p>nearest：使用最近的祖先滚动容器<em>（默认）</em></p>\n</li>\n<li><p>root：使用文档视口作为滚动容器。</p>\n</li>\n<li><p>self：使用元素本身作为滚动容器。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><axios>表示滚动方向，支持以下几个关键值</p>\n<ul>\n<li><p>block：滚动容器的块级轴方向<em>（默认）</em>。</p>\n</li>\n<li><p>inline：滚动容器内联轴方向。</p>\n</li>\n<li><p>y：滚动容器沿 y 轴方向。</p>\n</li>\n<li><p>x：滚动容器沿 x 轴方向。</p>\n</li>\n</ul>\n<h3 id=\"四、CSS-视图进度时间线\"><a href=\"#四、CSS-视图进度时间线\" class=\"headerlink\" title=\"四、CSS 视图进度时间线\"></a>四、CSS 视图进度时间线</h3><p><code>视图进度时间线（view progress timeline）</code>。这个名字有些难以理解，其实表示的是一个元素出现在页面视野范围内的进度，也就是关注的是元素自身位置。元素刚刚出现之前代表 0%进度，元素完全离开之后代表 100% 进度</p>\n<p>这个概念非常像JS中的<code>Intersection_Observer_API</code>，也就<code>交叉观察者</code>，可以<code>监测到元素在可视区</code>的情况，因此，在这种场景中，无需关注滚动容器是哪个，只用处理自身就行了。</p>\n<p>由于无需关注滚动容器，所以它的参数也不一样，分别是<axios>和<inset></p>\n<ul>\n<li><p><axios>表示滚动方向，支持以下几个关键值</p>\n<ul>\n<li><p>block：滚动容器的块级轴方向<em>（默认）</em>。</p>\n</li>\n<li><p>inline：滚动容器内联轴方向。</p>\n</li>\n<li><p>y：滚动容器沿 y 轴方向。</p>\n</li>\n<li><p>x：滚动容器沿 x 轴方向。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><inset>表示调整元素的视区范围，有点类似scroll-padding，支持两个值，表示开始和结束两个范围。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: <span class=\"built_in\">view</span>(auto); <span class=\"comment\">/* 默认值 */</span></span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: <span class=\"built_in\">view</span>(<span class=\"number\">20%</span>);</span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: <span class=\"built_in\">view</span>(<span class=\"number\">200px</span>);</span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: <span class=\"built_in\">view</span>(<span class=\"number\">20%</span> <span class=\"number\">40%</span>);</span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: <span class=\"built_in\">view</span>(<span class=\"number\">20%</span> <span class=\"number\">200px</span>);</span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: <span class=\"built_in\">view</span>(<span class=\"number\">100px</span> <span class=\"number\">200px</span>);</span><br><span class=\"line\"><span class=\"attribute\">animation</span>-timeline: <span class=\"built_in\">view</span>(auto <span class=\"number\">200px</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"五、CSS-动画范围区间\"><a href=\"#五、CSS-动画范围区间\" class=\"headerlink\" title=\"五、CSS 动画范围区间\"></a>五、CSS 动画范围区间</h3><p>默认情况下，动画会根据滚动区间范围一一映射，就比如第一个滚动指示器的例子，滚动多少，指示器的进度就走多少。</p>\n<p>那么，如何截取一定的滚动区间呢？这就要涉及一个新的属性，叫做<code>animation-range</code>，也就是“动画范围”。</p>\n<p>由于只是滚动容器的监听，因此比较简单，直接设置范围就行了</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.back</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">/**/</span></span><br><span class=\"line\">  <span class=\"attribute\">animation</span>: back-progress <span class=\"number\">1s</span> linear forwards;</span><br><span class=\"line\">  <span class=\"attribute\">animation</span>-timeline: <span class=\"built_in\">scroll</span>();</span><br><span class=\"line\">  <span class=\"attribute\">animation</span>-range: <span class=\"number\">0</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">animation</span>-range: normal; <span class=\"comment\">/* 等价于 normal normal */</span></span><br><span class=\"line\"><span class=\"attribute\">animation</span>-range: <span class=\"number\">20%</span>; <span class=\"comment\">/* 等价于 20% normal */</span></span><br><span class=\"line\"><span class=\"attribute\">animation</span>-range: <span class=\"number\">100px</span>; <span class=\"comment\">/* 等价于 100px normal */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> back-progress &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">from</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(<span class=\"number\">150%</span>); &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">to</span> &#123; <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(<span class=\"number\">0%</span>); &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>那么，一个返回按钮就像滚动进度条那样，慢慢的出来，直到滚动到最底部才完全出</p>\n<p>上面讲的代码完整列子</p>\n<p><img src=\"/images/timeline2.gif\" alt=\"timeline2\"></p>\n<p>目前这个属性兼容性还不是特别好，可以用CSS.supports做兼容处理，以上就是css animation-timeline的全部内容了</p>\n<p><a href=\"https://codepen.io/yongqimeng/pen/vYqeLzZ\">codepen完整示例</a></p>\n","feature":true,"text":"CSS滚动驱动动画animation-timeline终于正式支持了，一些炫酷的动画终于可以用简单的写法支持啦，快来看看吧~一、快速入门 CSS 滚动驱动动画下...","permalink":"/post/animation-timeline","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"css","slug":"css","count":1,"path":"api/categories/css.json"},{"name":"animation","slug":"css/animation","count":1,"path":"api/categories/css/animation.json"}],"tags":[{"name":"css","slug":"css","count":1,"path":"api/tags/css.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CSS%E6%BB%9A%E5%8A%A8%E9%A9%B1%E5%8A%A8%E5%8A%A8%E7%94%BBanimation-timeline%E7%BB%88%E4%BA%8E%E6%AD%A3%E5%BC%8F%E6%94%AF%E6%8C%81%E4%BA%86%EF%BC%8C%E4%B8%80%E4%BA%9B%E7%82%AB%E9%85%B7%E7%9A%84%E5%8A%A8%E7%94%BB%E7%BB%88%E4%BA%8E%E5%8F%AF%E4%BB%A5%E7%94%A8%E7%AE%80%E5%8D%95%E7%9A%84%E5%86%99%E6%B3%95%E6%94%AF%E6%8C%81%E5%95%A6%EF%BC%8C%E5%BF%AB%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%90%A7\"><span class=\"toc-text\">CSS滚动驱动动画animation-timeline终于正式支持了，一些炫酷的动画终于可以用简单的写法支持啦，快来看看吧~</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-CSS-%E6%BB%9A%E5%8A%A8%E9%A9%B1%E5%8A%A8%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">一、快速入门 CSS 滚动驱动动画</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81CSS-%E6%BB%9A%E5%8A%A8%E9%A9%B1%E5%8A%A8%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">二、CSS 滚动驱动动画</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89-CSS-%E6%BB%9A%E5%8A%A8%E8%BF%9B%E5%BA%A6%E6%97%B6%E9%97%B4%E7%BA%BF\"><span class=\"toc-text\">三. CSS 滚动进度时间线</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81CSS-%E8%A7%86%E5%9B%BE%E8%BF%9B%E5%BA%A6%E6%97%B6%E9%97%B4%E7%BA%BF\"><span class=\"toc-text\">四、CSS 视图进度时间线</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81CSS-%E5%8A%A8%E7%94%BB%E8%8C%83%E5%9B%B4%E5%8C%BA%E9%97%B4\"><span class=\"toc-text\">五、CSS 动画范围区间</span></a></li></ol></li></ol>","author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"屏幕适配方案","uid":"758086e3bca7c26b0f11ceb6e2c6e587","slug":"屏幕适配方案","date":"2024-08-04T08:19:02.993Z","updated":"2024-08-10T10:15:31.368Z","comments":true,"path":"api/articles/屏幕适配方案.json","keywords":null,"cover":"/images/cover1.jpg","text":"1.使用 @media搭配 rem 单位rem是相对于根html元素的字体大小的单位 html { font-size: 16px;}span { font-s...","permalink":"/post/屏幕适配方案","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"html&css","slug":"html-css","count":2,"path":"api/categories/html-css.json"}],"tags":[{"name":"html&css","slug":"html-css","count":2,"path":"api/tags/html-css.json"}],"author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{}}