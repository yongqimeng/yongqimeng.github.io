{"title":"白天与黑夜模式切换","uid":"9c18a0a19d9da2524bfd7e84c96937b7","slug":"darkmode & lightmode","date":"2023-02-11T06:20:21.000Z","updated":"2024-10-09T12:36:07.412Z","comments":true,"path":"api/articles/darkmode & lightmode.json","keywords":null,"cover":"/images/cover1.jpg","content":"<p>通过给body添加类名和prefers-color-scheme方法改变darkmode和lightmode对应的less变量来实现白天与黑夜模式切换。</p>\n<p>定义一个less映射：<code>@colors</code>用来存储颜色的变量，再定义一个less mixin <code>bl_color(@propertyName, @valueName)</code> 快速书写这些变量，从而提高代码的可维护性和复用性。</p>\n<figure class=\"highlight less\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">@colors:</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//背景颜色</span></span><br><span class=\"line\">  <span class=\"variable\">@bl_0:</span> <span class=\"built_in\">var</span>(--bl_background_<span class=\"attribute\">color</span>_0);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//文字颜色</span></span><br><span class=\"line\">  <span class=\"variable\">@text_0:</span> <span class=\"built_in\">var</span>(--bl_text_<span class=\"attribute\">color</span>_0);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//颜色</span></span><br><span class=\"line\">  <span class=\"variable\">@bl_red:</span> <span class=\"built_in\">var</span>(--bl_red);</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.bl_c</span>(<span class=\"variable\">@valueName</span>) &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.bl_color</span>(color, <span class=\"variable\">@valueName</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.bl_bc</span>(<span class=\"variable\">@valueName</span>) &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.bl_color</span>(background-color, <span class=\"variable\">@valueName</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.bl_color</span>(<span class=\"variable\">@propertyName</span>, <span class=\"variable\">@valueName</span>) &#123;</span><br><span class=\"line\">  @&#123;propertyName&#125;: @<span class=\"selector-tag\">colors</span><span class=\"selector-attr\">[ @@valueName]</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>通过css预处理器加js控制添加类名改变变量颜色的方式是兼容性比较好的方式。</p>\n<p><a href=\"https://caniuse.com/?search=var()\">变量兼容性</a>;<br><a href=\"https://codepen.io/yongqimeng/pen/LYwRadK\">darkmode &amp; lightmode–codepen</a></p>\n","feature":true,"text":"通过给body添加类名和prefers-color-scheme方法改变darkmode和lightmode对应的less变量来实现白天与黑夜模式切换。 定义一...","permalink":"/post/darkmode & lightmode","photos":[],"count_time":{"symbolsCount":643,"symbolsTime":"1 mins."},"categories":[{"name":"html&css","slug":"html-css","count":12,"path":"api/categories/html-css.json"}],"tags":[{"name":"css","slug":"css","count":9,"path":"api/tags/css.json"}],"toc":"","author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"滚动驱动动画animation-timeline","uid":"1fe4dcdfe1c34a2e89ece05477f6b2fb","slug":"animation-timeline","date":"2024-08-04T06:21:59.000Z","updated":"2024-10-09T13:18:39.768Z","comments":true,"path":"api/articles/animation-timeline.json","keywords":null,"cover":"/images/cover1.jpg","text":"CSS滚动驱动动画animation-timeline终于正式支持了，一些炫酷的动画终于可以用简单的写法支持啦~一、快速入门 CSS 滚动驱动动画下面是一个页面...","permalink":"/post/animation-timeline","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"css","slug":"css","count":2,"path":"api/categories/css.json"},{"name":"animation","slug":"css/animation","count":2,"path":"api/categories/css/animation.json"}],"tags":[{"name":"css","slug":"css","count":9,"path":"api/tags/css.json"}],"author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"逐帧动画实现无限轮播","uid":"92e648db1789cade1fa84cef6b1bbfe8","slug":"animation-steps","date":"2022-11-26T08:01:04.000Z","updated":"2024-10-09T13:12:13.695Z","comments":true,"path":"api/articles/animation-steps.json","keywords":null,"cover":"/images/cover1.jpg","text":"最近有一个无限滚动轮播的需求，最开始用js+延时器写了一版，但因为是用在首页性能消耗很大，所以想试试能不能用css搞定，嘿，还真发现了一种方法，虽然最后没有使用...","permalink":"/post/animation-steps","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"css","slug":"css","count":2,"path":"api/categories/css.json"},{"name":"animation","slug":"css/animation","count":2,"path":"api/categories/css/animation.json"}],"tags":[{"name":"animation","slug":"animation","count":3,"path":"api/tags/animation.json"}],"author":{"name":"M","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"这是我的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}